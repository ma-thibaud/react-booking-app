{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","props","today","Date","toISOString","split","useState","petName","setPetName","ownerName","setOwnerName","aptDate","setAptDate","aptTime","setAptTime","aptNotes","setAptNotes","className","formDisplay","onClick","toggleForm","id","noValidate","onSubmit","e","preventDefault","tempApt","addAppointment","htmlFor","readOnly","type","name","placeholder","value","onChange","target","rows","cols","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","App","myAppointments","updateMyAppointments","updateFormDisplay","updateOrderBy","updateOrderDir","queryText","updateQueryText","lastIndex","updateLastIndex","useEffect","fetch","headers","then","response","json","data","apts","index","order","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","apt","tempApts","unshift","dir","query","without","findIndex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.784e50af.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {FaPlus} from 'react-icons/fa';\n\nfunction AddAppointments(props) {\n\n  const today = (new Date).toISOString().split('T')[0]\n  const [petName, setPetName] = useState('')\n  const [ownerName, setOwnerName] = useState('')\n  const [aptDate, setAptDate] = useState(today)\n  const [aptTime, setAptTime] = useState('')\n  const [aptNotes, setAptNotes] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let tempApt = {\n      petName: petName,\n      ownerName: ownerName,\n      aptDate: aptDate + ' ' + aptTime,\n      aptNotes: aptNotes\n    }\n    props.addAppointment(tempApt)\n\n    setPetName('')\n    setOwnerName('')\n    setAptDate(today)\n    setAptTime('')\n    setAptNotes('')\n\n    props.toggleForm()\n  }\n\n  return (\n    <div className={'card textcenter mt-3 ' + (\n      props.formDisplay\n      ? ''\n      : 'add-appointment')}>\n    <div className=\"apt-addheading card-header bg-primary text-white\" onClick={props.toggleForm}>\n      <FaPlus/>\n      Add Appointment\n    </div>\n\n    <div className=\"card-body\">\n      <form\n        id=\"aptForm\"\n        noValidate\n        onSubmit={handleSubmit}\n        >\n        <div className=\"form-group form-row\">\n          <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"petName\" readOnly=\"readOnly\">\n            Pet Name\n          </label>\n          <div className=\"col-md-10\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"petName\"\n              placeholder=\"Pet's Name\"\n              value={petName}\n              onChange={e => setPetName(e.target.value)}\n              />\n          </div>\n        </div>\n\n        <div className=\"form-group form-row\">\n          <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"ownerName\">\n            Pet Owner\n          </label>\n          <div className=\"col-md-10\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"ownerName\"\n              placeholder=\"Owner's Name\"\n              value={ownerName}\n              onChange={e => setOwnerName(e.target.value)}\n              />\n          </div>\n        </div>\n\n        <div className=\"form-group form-row\">\n          <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"aptDate\">\n            Date\n          </label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"aptDate\"\n              id=\"aptDate\"\n              value={aptDate}\n              onChange={e => setAptDate(e.target.value)}\n              />\n          </div>\n          <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"aptTime\">\n            Time\n          </label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"time\"\n              className=\"form-control\"\n              name=\"aptTime\"\n              id=\"aptTime\"\n              value={aptTime}\n              onChange={e => setAptTime(e.target.value)}\n              />\n          </div>\n        </div>\n\n        <div className=\"form-group form-row\">\n          <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n            Apt. Notes\n          </label>\n          <div className=\"col-md-10\">\n            <textarea\n              className=\"form-control\"\n              rows=\"4\"\n              cols=\"50\"\n              name=\"aptNotes\"\n              id=\"aptNotes\"\n              placeholder=\"Appointment Notes\"\n              value={aptNotes}\n              onChange={e => setAptNotes(e.target.value)}\n              />\n          </div>\n        </div>\n\n        <div className=\"form-group form-row mb-0\">\n          <div className=\"offset-md-2 col-md-10\">\n            <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\">\n              Add Appointment\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>)\n}\n\nexport default AddAppointments\n","import React from 'react';\n\nconst SearchAppointments = (props) =>\n  <div className=\"search-appointments row justify-content-center my-4\">\n    <div className=\"col-md-6\">\n      <div className=\"input-group\">\n        <input\n          id=\"SearchApts\"\n          type=\"text\"\n          className=\"form-control\"\n          aria-label=\"Search Appointments\"\n          onChange={ e => props.searchApts(e.target.value) }\n        />\n        <div className=\"input-group-append\">\n          <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Sort by:\n            <span className=\"caret\"/>\n          </button>\n\n          <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n            <button\n              className={\n                'sort-by dropdown-item ' +\n                (props.orderBy === 'petName' ? 'active' : '')\n                }\n                onClick={ e => props.changeOrder('petName', props.orderDir) }\n                href=\"#\">\n                Pet Name\n            </button>\n            <button className={\n              'sort-by dropdown-item ' +\n              (props.orderBy === 'aptDate' ? 'active' : '')\n              }\n              onClick={ e => props.changeOrder('aptDate', props.orderDir) }\n              href=\"#\">\n              Date\n            </button>\n            <button className={\n              'sort-by dropdown-item ' +\n              (props.orderBy === 'ownerName' ? 'active' : '')\n              }\n              onClick={ e => props.changeOrder('ownerName', props.orderDir) }\n              href=\"#\">\n              Owner\n            </button>\n            <div role=\"separator\" className=\"dropdown-divider\"/>\n            <button className={\n              'sort-by dropdown-item ' +\n              (props.orderDir === 'asc' ? 'active' : '')\n              }\n              onClick={ e => props.changeOrder(props.orderBy, 'asc') }\n              href=\"#\">\n              Asc\n            </button>\n            <button className={\n              'sort-by dropdown-item ' +\n              (props.orderDir === 'desc' ? 'active' : '')\n              }\n              onClick={ e => props.changeOrder(props.orderBy, 'desc') }\n              href=\"#\">\n              Desc\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\nexport default SearchAppointments\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport Moment from 'react-moment';\n\nconst ListAppointments = (props) => {\n  return (\n    <div className=\"appointment-list item-list mb-3\">\n      {props.appointments.map((item) => (\n        <div className=\"pet-item col media py-3\" key={item.aptId}>\n          <div className=\"mr-3\">\n            <button className=\"pet-delete btn btn-sm btn-danger\"\n              onClick={() => props.deleteAppointment(item)}>\n              <FaTimes />\n            </button>\n          </div>\n\n          <div className=\"pet-info media-body\">\n            <div className=\"pet-head d-flex\">\n              <span\n                className=\"pet-name\"\n                contentEditable\n                suppressContentEditableWarning\n                onBlur={\n                  e => props.updateInfo('petName', e.target.innerText, item.aptId)\n                }\n              >\n                {item.petName}</span>\n              <span className=\"apt-date ml-auto\">\n                <Moment\n                  date={item.aptDate}\n                  parse=\"YYYY-MM-dd hh:mm:ss\"\n                  format=\"MMM-D h:mma\"\n                />\n              </span>\n            </div>\n\n            <div className=\"owner-name\">\n              <span className=\"label-item\">Owner: </span>\n              <span\n                contentEditable\n                suppressContentEditableWarning\n                onBlur={\n                  e => props.updateInfo('ownerName', e.target.innerText, item.aptId)\n                }\n              >\n                {item.ownerName}\n              </span>\n            </div>\n            <div\n              className=\"apt-notes\"\n              contentEditable\n              suppressContentEditableWarning\n              onBlur={\n                e => props.updateInfo('aptNotes', e.target.innerText, item.aptId)\n              }\n            >\n              {item.aptNotes}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ListAppointments\n","import React, { useState, useEffect } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\n\nimport { without, findIndex } from 'lodash';\n\nfunction App() {\n\n  const [myAppointments, updateMyAppointments] = useState([])\n  const [formDisplay, updateFormDisplay] = useState(false)\n  const [orderBy, updateOrderBy] = useState('aptDate')\n  const [orderDir, updateOrderDir] = useState('desc')\n  const [queryText, updateQueryText] = useState('')\n  const [lastIndex, updateLastIndex] = useState(0)\n\n  useEffect(() => {\n    fetch('./data.json', {\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n      .then(response => response.json())\n      .then(data => {\n        const apts = data.map((item, index) => {\n          item.aptId = index\n          updateLastIndex(index + 1)\n          return item\n        });\n        updateMyAppointments(apts)\n      })\n  }, [])\n\n  // Edit appointment infos\n  const updateInfo = (name, value, id) => {\n    let tempApts = myAppointments;\n    let aptIndex = findIndex(myAppointments, {\n      aptId: id\n    });\n    tempApts[aptIndex][name] = value;\n      updateMyAppointments(tempApts);\n  }\n\n  // Close form after Submit\n  const toggleForm = () =>\n    updateFormDisplay(!formDisplay)\n\n  // Add appointment\n  const addAppointment = apt => {\n    let tempApts = myAppointments;\n    apt.aptId = lastIndex\n    // updateLastIndex(lastIndex + 1)\n    tempApts.unshift(apt)\n    updateMyAppointments(tempApts)\n  }\n\n  // Delete appointments\n  const deleteAppointment = apt => {\n    let tempApts = myAppointments;\n    tempApts = without(tempApts, apt);\n    updateMyAppointments(tempApts)\n  }\n\n  // Filter appointments\n  const searchApts = query =>\n    updateQueryText(query)\n\n  const changeOrder = (order, dir) => {\n    updateOrderBy(order);\n    updateOrderDir(dir)\n  }\n\n  let order;\n  let filteredApts = myAppointments;\n  orderDir === 'asc' ? order = 1 : order  = -1;\n\n  filteredApts = filteredApts.sort((a,b) => {\n    return a[orderBy].toLowerCase() < b[orderBy].toLowerCase()\n    ? -1 * order\n    : 1 * order;\n  }).filter(eachItem => {\n    return(\n      eachItem['petName']\n        .toLowerCase()\n        .includes(queryText.toLowerCase()) ||\n      eachItem['ownerName']\n        .toLowerCase()\n        .includes(queryText.toLowerCase()) ||\n      eachItem['aptNotes']\n        .toLowerCase()\n        .includes(queryText.toLowerCase())\n    )\n  })\n\n  return (\n    <main className=\"page bg-white\" id=\"petratings\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 bg-white\">\n            <div className=\"container\">\n              <AddAppointments\n                formDisplay={formDisplay}\n                toggleForm={toggleForm}\n                addAppointment={addAppointment}\n              />\n              <SearchAppointments\n                orderBy={orderBy}\n                orderDir={orderDir}\n                changeOrder={changeOrder}\n                searchApts={searchApts}\n              />\n              <ListAppointments\n                appointments={filteredApts}\n                deleteAppointment={deleteAppointment}\n                updateInfo={updateInfo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}